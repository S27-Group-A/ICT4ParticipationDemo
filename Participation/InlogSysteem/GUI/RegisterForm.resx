<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbProfilePic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gKAAAAAAAD0MH0P2sR0KNI1Cj//Z
</value>
  </data>
</root>